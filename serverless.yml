# See also https://www.serverless.com/framework/docs/providers/aws/guide/serverless.yml/
service: nagato

provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1

plugins:
  - serverless-python-requirements

package:
  include:
    - microblog/mastodon_api.py
    - microblog/mastodon_status.py
    - microblog/mastodon_user.py
    - microblog/microblog_api.py
    - microblog/microblog_status.py
    - microblog/microblog_user.py
    - microblog/twitter_api.py
    - microblog/twitter_status.py
    - microblog/twitter_user.py
    - handler.py
    - nagato.py
    - phrases.txt
    - yahoo.py
  exclude:
    - .*/**

functions:

  nagato_twitter:
    handler: handler.post_random_phrase
    events:
      - schedule: cron(10 7 * * ? *)
    environment:
      SLACK_WEBHOOK_URL: ${ssm:SLACK_WEBHOOK_URL}
      TWITTER_CONSUMER_KEY: ${ssm:TWITTER_CONSUMER_KEY}
      TWITTER_CONSUMER_SECRET: ${ssm:TWITTER_CONSUMER_SECRET}
      TWITTER_ACCESS_TOKEN: ${ssm:TWITTER_ACCESS_TOKEN}
      TWITTER_ACCESS_SECRET: ${ssm:TWITTER_ACCESS_SECRET}
      YAHOO_APPLICATION_ID: ${ssm:YAHOO_APPLICATION_ID}
    reservedConcurrency: 1

  nagato_twitter_refollow:
    handler: handler.refollow
    events:
      - schedule: rate(1 day)
    environment:
      SLACK_WEBHOOK_URL: ${ssm:SLACK_WEBHOOK_URL}
      TWITTER_CONSUMER_KEY: ${ssm:TWITTER_CONSUMER_KEY}
      TWITTER_CONSUMER_SECRET: ${ssm:TWITTER_CONSUMER_SECRET}
      TWITTER_ACCESS_TOKEN: ${ssm:TWITTER_ACCESS_TOKEN}
      TWITTER_ACCESS_SECRET: ${ssm:TWITTER_ACCESS_SECRET}
      YAHOO_APPLICATION_ID: ${ssm:YAHOO_APPLICATION_ID}
    reservedConcurrency: 1

  yukinagato_mastodon:
    handler: handler.post_random_phrase
    events:
      - schedule: cron(10 7 * * ? *)
    environment:
      SLACK_WEBHOOK_URL: ${ssm:SLACK_WEBHOOK_URL}
      MASTODON_ACCESS_TOKEN: ${ssm:MASTODON_ACCESS_TOKEN}
      MASTODON_API_BASE_URL: ${ssm:MASTODON_API_BASE_URL}
      YAHOO_APPLICATION_ID: ${ssm:YAHOO_APPLICATION_ID}
    reservedConcurrency: 1

  yukinagato_mastodon_refollow:
    handler: handler.refollow
    events:
      - schedule: rate(1 day)
    environment:
      SLACK_WEBHOOK_URL: ${ssm:SLACK_WEBHOOK_URL}
      MASTODON_ACCESS_TOKEN: ${ssm:MASTODON_ACCESS_TOKEN}
      MASTODON_API_BASE_URL: ${ssm:MASTODON_API_BASE_URL}
      YAHOO_APPLICATION_ID: ${ssm:YAHOO_APPLICATION_ID}
    reservedConcurrency: 1

# vim:ts=2:sw=2:
